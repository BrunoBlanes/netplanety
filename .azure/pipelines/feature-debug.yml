# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  batch: false
  branches:
    include:
    - feature/*
    exclude:
    - main
    - releases/*

name: Debug and Testing
pool: 'Netplanety Pool'

variables:
  buildPlatform: 'x64'
  buildConfiguration: 'debug'

stages:
  - stage: Setup
    jobs:
    - job: Download
      displayName: Download .NET SDK
      steps:
      - checkout: none
      - task: UseDotNet@2
        inputs:
          packageType: 'sdk'
          version: '9.0.x'
          includePreviewVersions: false
    - job: Checkout
      displayName: Checkout GitHub Code
      steps:
      - checkout: self
        clean: true

  - stage: Build
    jobs:
    - job: Restore
      displayName: Restore
      steps:
      - checkout: none
      - task: DotNetCoreCLI@2
        displayName: Restore Packages
        inputs:
          command: 'restore'
          projects: '**/*.csproj'
          restoreArguments: '-a $(buildPlatform)'
          feedsToUse: 'config'
          nugetConfigPath: '$(System.DefaultWorkingDirectory)/nuget.config'
    - job: Build
      displayName: Build
      dependsOn: Restore
      steps:
      - checkout: none
      - task: DotNetCoreCLI@2
        displayName: Build Projects
        inputs:
          command: 'build'
          arguments: '-a $(buildPlatform) -c $(buildConfiguration) --no-restore'
          projects: '**/*.csproj'
    - job: Publish
      displayName: Publish
      dependsOn: Build
      steps:
      - checkout: none
      - task: DotNetCoreCLI@2
        displayName: Publish
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '**/*.csproj'
          arguments: '-a $(buildPlatform) -c $(buildConfiguration) --no-restore --no-build'
          zipAfterPublish: false

  - stage: Test
    jobs:
    - job: Test
      displayName: Test
      steps:
      - checkout: none
      - task: DotNetCoreCLI@2
        displayName: Run Tests
        inputs:
          command: 'test'
          projects: '**/*.Tests.dll'
          arguments: '-a $(buildPlatform) --collect "Code coverage"'

